version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: infocon-api-gateway
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_PATH=./data/api_gateway.db
      - UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=10485760
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - FRONTEND_URL=http://localhost:3000
      - LOG_LEVEL=info
      - LOG_FILE=./logs/app.log
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - infocon-network

  # Optional: Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: infocon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - infocon-network
    profiles:
      - with-redis

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: infocon-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
    restart: unless-stopped
    networks:
      - infocon-network
    profiles:
      - with-nginx

volumes:
  redis_data:

networks:
  infocon-network:
    driver: bridge
